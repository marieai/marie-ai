# ############### Networks ###############

# Container networking setup
# docker network create --driver=bridge public
# sysctl net.ipv4.conf.all.forwarding=1

services:
  psql:
    container_name: marie-psql-server
    image: ghcr.io/ferretdb/postgres-documentdb:17-0.103.0
    command: >
      postgres
      -c max_connections=200
      -c shared_preload_libraries=pg_stat_statements,pg_cron,pg_documentdb
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c pg_stat_statements.track_utility=off
      -c pg_stat_statements.save=on
      -c enable_partition_pruning=on
      -c constraint_exclusion=partition
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - POSTGRES_SHARED_PRELOAD_LIBRARIES=pg_stat_statements,pg_cron,pg_documentdb
    volumes:
      - psql_data:/var/lib/postgresql/data
      - ./config/psql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - marie_default
volumes:
  psql_data:
    driver: local

## ############### Networks ###############
networks:
  marie_default:
    external: true


# ############### Docker Compose Commands ###############

# docker compose  --env-file ./config/.env  -f ./Dockerfiles/docker-compose.storage.yml --project-directory . up  --build --remove-orphans

#  forcibly remove volume and container for full reset
# docker compose  --env-file ./config/.env  -f ./Dockerfiles/docker-compose.storage.yml --project-directory . down --remove-orphans
# docker volume rm marie_psql_data  --force
# docker container rm marie-psql-server  --force  --volumes

# If you need to reset the PostgreSQL container and its data volume, follow these steps:

# 1. Stop and remove the container
# docker container stop marie-psql-server
# docker container rm marie-psql-server --volumes --force

# 2. Remove the named volume (now it's safe)
# docker volume rm marie_psql_data