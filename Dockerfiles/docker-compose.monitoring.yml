# ############### Networks ###############

# Container networking setup
# docker network create --driver=bridge public
# sysctl net.ipv4.conf.all.forwarding=1

# Dashboards
# http://localhost:16686/ # Jaeger
# http://localhost:3000/login # Grafana
# http://localhost:3100/ # Loki
# http://localhost:9090/ # Prometheus
# http://localhost:9093/#/status # Alertmanager

# https://jina.ai/serve/cloud-nativeness/opentelemetry/#opentelemetry
# https://opentelemetry.io/docs/collector/installation/
# https://github.com/stefanoboriero/lgtm-docker

services:
  # Jaeger https://www.jaegertracing.io/docs/2.0/getting-started/
  jaeger:
    image: jaegertracing/jaeger:2.0.0
    container_name: jaeger
    ports:
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "9411:9411"
    command:
      - "--set"
      - "receivers.otlp.protocols.http.endpoint=0.0.0.0:4318"
      - "--set"
      - "receivers.otlp.protocols.grpc.endpoint=0.0.0.0:4317"
    restart: unless-stopped
    networks:
      - public

  otel-collector:
    image: otel/opentelemetry-collector:0.114.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./config/opentelemetry/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888" # Prometheus metrics exposed by the collector
      - "8889" # Prometheus exporter metrics
      - "4317:4317" # OTLP gRPC receiver
    depends_on:
      - jaeger
    networks:
      - public

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
     - ./config/prometheus:/etc/prometheus
     - prometheus_data:/prometheus
    command: "--web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    links:
    - alertmanager
    networks:
      - public
    ports:
     - "9090:9090"

  alertmanager:
    image: prom/alertmanager:latest
    restart: unless-stopped
    networks:
      - public
    ports:
      - "9093:9093"
    volumes:
      - "./config/alertmanager:/config"
      - alertmanager_data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
#      - /var/lib/grafana:/var/lib/grafana
    env_file:
      - ./config/grafana/config.monitoring
    links:
      - prometheus
    networks:
      - public

  loki:
    image: grafana/loki:3.1.0
    restart: unless-stopped
    volumes:
      - ./config/grafana/loki:/etc/loki
      - loki_data:/loki
    ports:
      - "3100:3100"
    command: --config.file=/etc/loki/loki-config.yaml
    links:
      - prometheus
      - grafana
    networks:
      - public


volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  alertmanager_data:
    driver: local

# ############### Networks ###############
networks:
  public:
    external: true
